name: Deploy Go Application

on:
  push:
    branches:
      - main

jobs:
  check-skip-ci:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for [skip ci] in commit message
        id: check
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[skip ci]"* ]]; then
            echo "::set-output name=skip::true"
          else
            echo "::set-output name=skip::false"
          fi
  
  build-and-deploy:
    needs: check-skip-ci
    if: needs.check-skip-ci.outputs.skip == 'false'
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.2'

      # Build the Go project
      - name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build cmd/backend-go/main.go

      # SCP the built binary to the remote server, and restart the service
      - name: Copy files via scp
        env:
          HOST: ${{ secrets.REMOTE_HOST }}
          USER: ${{ secrets.REMOTE_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST 'sudo systemctl stop ushop-go && sudo rm /root/www/e-commerce/backend/main'
          scp -i private_key -o StrictHostKeyChecking=no main $USER@$HOST:/root/www/e-commerce/backend/main
          ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST 'sudo systemctl start ushop-go'
